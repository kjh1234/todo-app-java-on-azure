pipeline {
  agent any
  stages {
    stage('Checkout') {
      parallel {
        stage('Checkout') {
          steps {
            checkout([
                                                                          $class: 'GitSCM', 
                                                                          userRemoteConfigs: [[url: GIT_REPOSITORY_URL, credentialsId: GIT_CREDENTIALS_ID ]], 
                                                                          branches: [[name: GIT_BRANCH]]
                                                                        ])
              cleanWs()
            }
          }

          stage('') {
            steps {
              script {
                ftpPublisher alwaysPublishFromMaster: true, continueOnError: false, failOnError: false, publishers: [
                  [configName: 'YOUR_CONFIG_HERE', transfers: [
                    [asciiMode: false, cleanRemote: false, excludes: '', flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: "YOUR_DIRECTORY_HERE", remoteDirectorySDF: false, removePrefix: '', sourceFiles: '**.exe, **.txt']
                  ], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: true]
                ]
              }

            }
          }

        }
      }

      stage('Build') {
        steps {
          sh '''
          echo \'mvn\'
          '''
        }
      }

      stage('docker test login') {
        steps {
          sh '''
          echo "$DOCKER_ACC_PSW" | docker login --username ${DOCKER_ACC_USR} --password-stdin ${DOCKER_URL}
          '''
        }
      }

      stage('Deploy') {
        steps {
          sh '''
#ftp -n -v ${DEPLOY_ADDRESS} << EOF
#user ${DEPLOY_FTP_ACC_USR} ${DEPLOY_FTP_ACC_PSW}
#cd /data/was
#bin
#lcd ${workspace}/target
#put deploy.jar deploy.jar
#EOF
'''
        }
      }

    }
    environment {
      GIT_REPOSITORY_URL = 'https://github.com/kjh1234/todo-app-java-on-azure.git'
      GIT_CREDENTIALS_ID = 'GIT_CREDENTIALS_ID'
      GIT_BRANCH = '*/master'
      DEPLOY_ADDRESS = 'localhost'
      DEPLOY_FTP_ACC = credentials('DEPLOY_FTP_ACC')
      DOCKER_URL = 'http://innoregi.azurecr.io'
      DOCKER_ACC = credentials('azuer-docker-registry')
    }
    parameters {
      string(name: 'TAG_VERSION', defaultValue: '', description: '')
    }
  }